{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AI Coding Template Metrics Schema",
  "version": "1.0.0",
  "type": "object",
  "required": ["timestamp", "type", "name", "session_id", "metrics"],
  "properties": {
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of event"
    },
    "type": {
      "type": "string",
      "enum": ["command", "agent", "script"],
      "description": "Type of entity being tracked"
    },
    "name": {
      "type": "string",
      "description": "Name of command (/design), agent (code-architect), or script (setup-manager.sh)"
    },
    "category": {
      "type": "string",
      "description": "Category for scripts: setup|workflow|quality|hooks|docs|status|release"
    },
    "session_id": {
      "type": "string",
      "description": "Unique session identifier for correlation"
    },
    "invocation_context": {
      "type": "object",
      "properties": {
        "triggered_by": {
          "type": "string",
          "enum": ["user", "command", "agent", "hook", "cron", "system"]
        },
        "parent_entity": {
          "type": "string",
          "description": "Command, agent, or script that triggered this execution"
        },
        "workflow_phase": {
          "type": "string",
          "enum": ["design", "architecture", "planning", "development", "testing", "deployment", "maintenance"]
        },
        "epic": {
          "type": "string",
          "description": "Current epic name if applicable"
        },
        "task_id": {
          "type": "string",
          "description": "Current task ID if applicable"
        },
        "arguments": {
          "type": "object",
          "description": "Command arguments or script parameters"
        }
      }
    },
    "metrics": {
      "type": "object",
      "required": ["duration_ms", "status"],
      "properties": {
        "duration_ms": {
          "type": "integer",
          "minimum": 0,
          "description": "Execution duration in milliseconds"
        },
        "status": {
          "type": "string",
          "enum": ["completed", "failed", "interrupted", "timeout"]
        },
        "model_used": {
          "type": "string",
          "enum": ["opus", "sonnet", "haiku", "none"]
        },
        "tokens_consumed": {
          "type": "integer",
          "minimum": 0
        },
        "tools_used": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exit_code": {
          "type": "integer",
          "description": "For scripts: exit code"
        },
        "retry_count": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "resource_usage": {
          "type": "object",
          "properties": {
            "peak_memory_mb": {
              "type": "number",
              "minimum": 0
            },
            "cpu_percent": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            }
          }
        }
      }
    },
    "dependencies": {
      "type": "object",
      "properties": {
        "commands_invoked": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "agents_invoked": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scripts_called": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_tools": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "output_metrics": {
      "type": "object",
      "properties": {
        "lines_processed": {
          "type": "integer",
          "minimum": 0
        },
        "files_modified": {
          "type": "integer",
          "minimum": 0
        },
        "tests_run": {
          "type": "integer",
          "minimum": 0
        },
        "validations_passed": {
          "type": "integer",
          "minimum": 0
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "context": {
      "type": "object",
      "properties": {
        "project_type": {
          "type": "string"
        },
        "codebase_size": {
          "type": "string",
          "enum": ["small", "medium", "large", "enterprise"]
        },
        "team_size": {
          "type": "integer",
          "minimum": 1
        },
        "previous_entity": {
          "type": "string"
        },
        "next_entity": {
          "type": "string"
        }
      }
    }
  }
}