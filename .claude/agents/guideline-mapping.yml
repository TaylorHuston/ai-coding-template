---
# Agent-Specific Guideline Mapping
# Maps each agent to their relevant development guidelines for just-in-time loading
version: "0.3.0"
created: "2025-01-09"
last_updated: "2025-09-19"
purpose: "Define which guidelines each agent should load when starting work"

# Core principle: Only load guidelines relevant to the agent's domain
# This prevents context waste and information overload

agents:
  api-designer:
    guidelines:
      - api-guidelines.md
      - architectural-principles.md
      - code-quality.md
    description: "API architecture, design patterns, and documentation standards"

  security-auditor:
    guidelines:
      - security-guidelines.md
      - authentication-authorization.md
      - coding-standards.md
      - code-quality.md
    description: "Security assessment, vulnerability detection, auth patterns"

  test-engineer:
    guidelines:
      - testing-standards.md
      - quality-standards.md
      - code-review-guidelines.md
      - code-quality.md
    description: "Test creation, TDD/BDD, quality assurance"

  technical-writer:
    guidelines:
      - documentation-standards.md
      - visual-documentation.md
      - changelog-maintenance.md
      - ai-collaboration-standards.md
    description: "Documentation creation, maintenance, standards, AI collaboration docs"

  code-architect:
    guidelines:
      - architectural-principles.md
      - api-guidelines.md
      - security-guidelines.md
      - quality-standards.md
      - code-quality.md
      - ai-collaboration-standards.md
    description: "System design, architecture decisions, technical planning, AI workflow design"

  code-reviewer:
    guidelines:
      - code-review-guidelines.md
      - quality-standards.md
      - coding-standards.md
      - security-guidelines.md
      - testing-standards.md
      - code-quality.md
    description: "Code quality assessment, review standards, best practices"

  frontend-specialist:
    guidelines:
      - coding-standards.md
      - quality-standards.md
      - testing-standards.md
      - api-guidelines.md
      - code-quality.md
    description: "Frontend development, UI/UX, client-side patterns"

  backend-specialist:
    guidelines:
      - coding-standards.md
      - api-guidelines.md
      - security-guidelines.md
      - testing-standards.md
      - quality-standards.md
      - code-quality.md
    description: "Server-side development, business logic, API implementation"

  database-specialist:
    guidelines:
      - quality-standards.md
      - security-guidelines.md
      - coding-standards.md
      - testing-standards.md
      - code-quality.md
    description: "Database design, optimization, data security"

  devops-engineer:
    guidelines:
      - security-guidelines.md
      - quality-standards.md
      - git-workflow.md
      - code-quality.md
    description: "Infrastructure, deployment, CI/CD, security hardening"

  performance-optimizer:
    guidelines:
      - quality-standards.md
      - testing-standards.md
      - coding-standards.md
      - code-quality.md
    description: "Performance analysis, optimization, monitoring"

  template-maintainer:
    guidelines:
      - quality-standards.md
      - security-guidelines.md
      - git-workflow.md
      - code-quality.md
    description: "Template lifecycle management, NPM publishing, version management"

  refactoring-specialist:
    guidelines:
      - code-review-guidelines.md
      - coding-standards.md
      - quality-standards.md
      - testing-standards.md
      - code-quality.md
    description: "Code improvement, technical debt reduction"

  migration-specialist:
    guidelines:
      - quality-standards.md
      - testing-standards.md
      - git-workflow.md
      - security-guidelines.md
      - code-quality.md
    description: "Framework upgrades, dependency updates, safe migrations"

  data-analyst:
    guidelines:
      - quality-standards.md
      - security-guidelines.md
      - coding-standards.md
      - code-quality.md
    description: "Data processing, analysis, reporting, insights"

  # Meta-agents that coordinate others
  project-manager:
    guidelines:
      - quality-standards.md
      - git-workflow.md
      - changelog-maintenance.md
      - ai-collaboration-standards.md
    description: "Multi-agent coordination, project orchestration, AI workflow management"

  context-analyzer:
    guidelines:
      - ai-collaboration-standards.md
    description: "Project analysis and investigation - enhanced with AI collaboration patterns"

  ai-llm-expert:
    guidelines:
      - coding-standards.md
      - quality-standards.md
      - api-guidelines.md
      - ai-collaboration-standards.md
      - code-quality.md
    description: "AI/LLM architecture, implementation, optimization, AI collaboration systems"

# Universal guidelines that all agents should be aware of (loaded via CLAUDE.md):
# - Universal quality standards (patterns, conventions, changelog updates)
# - Critical rules (commit approval, test-first, branch-first)
# - Response protocol (concise, explicit, incremental, transparent)

# Optimization Summary (v0.3.0):
# - Consolidated 19 guideline files down to 14 files with 2 new specialized files
# - Enhanced files: architectural-principles.md, authentication-authorization.md,
#   code-review-guidelines.md, git-workflow.md, quality-standards.md
# - New files: ai-collaboration-standards.md, code-quality.md
# - Extracted code examples to .resources/examples/ directory
# - All guideline files optimized for AI processing (under 400 lines)
# - Complete agent coverage with specialized AI collaboration standards

# Usage pattern:
# 1. Agent starts work
# 2. Agent loads its mapped guidelines from docs/development/guidelines/
# 3. Agent applies domain-specific knowledge to task
# 4. Universal rules from CLAUDE.md always apply