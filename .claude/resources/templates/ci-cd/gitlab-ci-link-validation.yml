# GitLab CI/CD pipeline for automated link validation
# Add this to your .gitlab-ci.yml file

stages:
  - validate
  - report

variables:
  # Cache validation results for faster subsequent runs
  VALIDATION_CACHE_KEY: "link-validation-$CI_COMMIT_REF_SLUG"

# Fast validation for all commits
link-validation:
  stage: validate
  image: ubuntu:latest
  before_script:
    - apt-get update && apt-get install -y curl git
    - chmod +x .claude/resources/scripts/docs/link-validator.sh
    - chmod +x .claude/resources/scripts/validation/validate-links-ci.sh
  script:
    - echo "Running link validation..."
    - .claude/resources/scripts/validation/validate-links-ci.sh --no-report --verbose
  rules:
    - changes:
        - "**/*.md"
        - ".claude/resources/scripts/docs/**"
  cache:
    key: $VALIDATION_CACHE_KEY
    paths:
      - .claude/working/

# Comprehensive validation with external links (manual/scheduled)
comprehensive-link-validation:
  stage: validate
  image: ubuntu:latest
  before_script:
    - apt-get update && apt-get install -y curl git
    - chmod +x .claude/resources/scripts/docs/link-validator.sh
    - chmod +x .claude/resources/scripts/validation/validate-links-ci.sh
  script:
    - echo "Running comprehensive link validation..."
    - .claude/resources/scripts/validation/validate-links-ci.sh --external --verbose
  artifacts:
    when: always
    paths:
      - .claude/working/broken-links-report.md
    expire_in: 30 days
    reports:
      junit: .claude/working/link-validation-results.xml  # Optional: if you add JUnit output
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - when: manual
      allow_failure: true

# Generate detailed report on failures
link-validation-report:
  stage: report
  image: ubuntu:latest
  before_script:
    - apt-get update && apt-get install -y curl git
    - chmod +x .claude/resources/scripts/docs/link-validator.sh
  script:
    - echo "Generating detailed link validation report..."
    - .claude/resources/scripts/docs/link-validator.sh --ci
  artifacts:
    when: on_failure
    paths:
      - .claude/working/broken-links-report.md
    expire_in: 30 days
  rules:
    - changes:
        - "**/*.md"
      when: on_failure

# Optional: Schedule weekly comprehensive validation
# Add this to your scheduled pipeline configuration:
#
# comprehensive-weekly:
#   extends: comprehensive-link-validation
#   only:
#     - schedules